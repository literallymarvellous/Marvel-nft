{
  "address": "0x3868dbdec7Ca663c2EcF38BF91a99ABe880A1eAa",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9c08e4118df33eae91e7c2df012ee0770057861e8aa87a2e01f90bee17fa6d1c",
  "receipt": {
    "to": null,
    "from": "0x622F73efA07Efd4814Aa9695a1EaDCF8644b1B1F",
    "contractAddress": "0x3868dbdec7Ca663c2EcF38BF91a99ABe880A1eAa",
    "transactionIndex": 21,
    "gasUsed": "2560135",
    "logsBloom": "0x
    "blockHash": "0x8b583956581a9b5d65a7b0699a4a1890a0a075ea07be343f3e7e60776ec94f25",
    "transactionHash": "0x9c08e4118df33eae91e7c2df012ee0770057861e8aa87a2e01f90bee17fa6d1c",
    "logs": [
      {
        "transactionIndex": 21,
        "blockNumber": 12697621,
        "transactionHash": "0x9c08e4118df33eae91e7c2df012ee0770057861e8aa87a2e01f90bee17fa6d1c",
        "address": "0x3868dbdec7Ca663c2EcF38BF91a99ABe880A1eAa",
        "topics": [
          "0x8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000622f73efa07efd4814aa9695a1eadcf8644b1b1f"
        ],
        "data": "0x",
        "logIndex": 9,
        "blockHash": "0x8b583956581a9b5d65a7b0699a4a1890a0a075ea07be343f3e7e60776ec94f25"
      }
    ],
    "blockNumber": 12697621,
    "cumulativeGasUsed": "3687044",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x622F73efA07Efd4814Aa9695a1EaDCF8644b1B1F"
  ],
  "numDeployments": 1,
  "solcInputHash": "ba8d2666aa85b705f1db7545d205e59e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Collectible.sol\":\"Collectible\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"contracts/Collectible.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.12;\\n\\n/**\\n * @title Marvels NFT\\n * @author Ahiara Ikechukwu Marvellous\\n * @notice A 100 NFT token that can be collected by anyone\\n */\\n\\nimport \\\"solmate/src/tokens/ERC721.sol\\\";\\nimport \\\"solmate/src/auth/Owned.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\ncontract Collectible is ERC721, Owned {\\n    using Strings for uint256;\\n    uint8 private constant _maxSupply = 100;\\n    uint256 private constant MINT_PRICE = 0.01 ether;\\n\\n    uint8 private _counter;\\n\\n    modifier notMaxSupply() {\\n        require(_counter < _maxSupply, \\\"No more tokens to mint\\\");\\n        _;\\n    }\\n\\n    modifier correctFee(uint256 quantity) {\\n        require(quantity * MINT_PRICE == msg.value, \\\"Fee is incorrect\\\");\\n        _;\\n    }\\n\\n    constructor(address _owner) ERC721(\\\"Marvels\\\", \\\"MARV\\\") Owned(_owner) {}\\n\\n    function _baseURI() internal pure returns (string memory) {\\n        return\\n            \\\"https://bafybeibhqislilo36kh2bhepzilr44hgfzpkngnf2x3tbuhopg4qb3fuha.ipfs.dweb.link/metadata/\\\";\\n    }\\n\\n    function totalSupply() public view returns (uint8) {\\n        return _counter;\\n    }\\n\\n    function mint()\\n        external\\n        payable\\n        notMaxSupply\\n        correctFee(1)\\n        returns (uint8)\\n    {\\n        uint8 id = _counter++;\\n        _mint(msg.sender, id);\\n        return id;\\n    }\\n\\n    function mint(uint256 _quantity)\\n        external\\n        payable\\n        notMaxSupply\\n        correctFee(_quantity)\\n        returns (uint256[] memory)\\n    {\\n        require(_quantity <= 5, \\\"Can't mint more than 5\\\");\\n        uint256[] memory ids = new uint256[](_quantity);\\n\\n        for (uint256 i = 0; i < _quantity; i++) {\\n            uint256 id = _counter++;\\n\\n            _mint(msg.sender, id);\\n            ids[i] = id;\\n        }\\n\\n        return ids;\\n    }\\n\\n    function tokenURI(uint256 tokenId)\\n        public\\n        view\\n        override(ERC721)\\n        returns (string memory)\\n    {\\n        require(ownerOf(tokenId) != address(0), \\\"Token does not exist\\\");\\n\\n        return string(abi.encodePacked(_baseURI(), tokenId.toString()));\\n    }\\n\\n    function withdraw() external onlyOwner {\\n        (bool success, ) = owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success, \\\"withdrawal failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x6f7fd7ab7ccabbd39ff9e77cb89aae8005cdbea85f46d494e2f00089620ce790\",\"license\":\"UNLICENSED\"},\"solmate/src/auth/Owned.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Simple single owner authorization mixin.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Owned.sol)\\nabstract contract Owned {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event OwnerUpdated(address indexed user, address indexed newOwner);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            OWNERSHIP STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    address public owner;\\n\\n    modifier onlyOwner() virtual {\\n        require(msg.sender == owner, \\\"UNAUTHORIZED\\\");\\n\\n        _;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(address _owner) {\\n        owner = _owner;\\n\\n        emit OwnerUpdated(address(0), _owner);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             OWNERSHIP LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function setOwner(address newOwner) public virtual onlyOwner {\\n        owner = newOwner;\\n\\n        emit OwnerUpdated(msg.sender, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x27255bf4fd142ba38ca6c9d5ef53ea50b8c91bf4fc51c4b14fe7b837d037619d\",\"license\":\"AGPL-3.0-only\"},\"solmate/src/tokens/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern, minimalist, and gas efficient ERC-721 implementation.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC721.sol)\\nabstract contract ERC721 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 indexed id);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 indexed id);\\n\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                         METADATA STORAGE/LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    function tokenURI(uint256 id) public view virtual returns (string memory);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                      ERC721 BALANCE/OWNER STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(uint256 => address) internal _ownerOf;\\n\\n    mapping(address => uint256) internal _balanceOf;\\n\\n    function ownerOf(uint256 id) public view virtual returns (address owner) {\\n        require((owner = _ownerOf[id]) != address(0), \\\"NOT_MINTED\\\");\\n    }\\n\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        require(owner != address(0), \\\"ZERO_ADDRESS\\\");\\n\\n        return _balanceOf[owner];\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                         ERC721 APPROVAL STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(uint256 => address) public getApproved;\\n\\n    mapping(address => mapping(address => bool)) public isApprovedForAll;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(string memory _name, string memory _symbol) {\\n        name = _name;\\n        symbol = _symbol;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC721 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 id) public virtual {\\n        address owner = _ownerOf[id];\\n\\n        require(msg.sender == owner || isApprovedForAll[owner][msg.sender], \\\"NOT_AUTHORIZED\\\");\\n\\n        getApproved[id] = spender;\\n\\n        emit Approval(owner, spender, id);\\n    }\\n\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        isApprovedForAll[msg.sender][operator] = approved;\\n\\n        emit ApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        require(from == _ownerOf[id], \\\"WRONG_FROM\\\");\\n\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(\\n            msg.sender == from || isApprovedForAll[from][msg.sender] || msg.sender == getApproved[id],\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n\\n        // Underflow of the sender's balance is impossible because we check for\\n        // ownership above and the recipient's balance can't realistically overflow.\\n        unchecked {\\n            _balanceOf[from]--;\\n\\n            _balanceOf[to]++;\\n        }\\n\\n        _ownerOf[id] = to;\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(from, to, id);\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        bytes calldata data\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC165 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return\\n            interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165\\n            interfaceId == 0x80ac58cd || // ERC165 Interface ID for ERC721\\n            interfaceId == 0x5b5e139f; // ERC165 Interface ID for ERC721Metadata\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 id) internal virtual {\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(_ownerOf[id] == address(0), \\\"ALREADY_MINTED\\\");\\n\\n        // Counter overflow is incredibly unrealistic.\\n        unchecked {\\n            _balanceOf[to]++;\\n        }\\n\\n        _ownerOf[id] = to;\\n\\n        emit Transfer(address(0), to, id);\\n    }\\n\\n    function _burn(uint256 id) internal virtual {\\n        address owner = _ownerOf[id];\\n\\n        require(owner != address(0), \\\"NOT_MINTED\\\");\\n\\n        // Ownership check above ensures no underflow.\\n        unchecked {\\n            _balanceOf[owner]--;\\n        }\\n\\n        delete _ownerOf[id];\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(owner, address(0), id);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL SAFE MINT LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _safeMint(address to, uint256 id) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function _safeMint(\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n}\\n\\n/// @notice A generic interface for a contract which properly accepts ERC721 tokens.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC721.sol)\\nabstract contract ERC721TokenReceiver {\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external virtual returns (bytes4) {\\n        return ERC721TokenReceiver.onERC721Received.selector;\\n    }\\n}\\n\",\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002f5838038062002f58833981810160405281019062000037919062000296565b806040518060400160405280600781526020017f4d617276656c73000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4d415256000000000000000000000000000000000000000000000000000000008152508160009080519060200190620000bc9291906200017c565b508060019080519060200190620000d59291906200017c565b50505080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7660405160405180910390a350506200032d565b8280546200018a90620002f7565b90600052602060002090601f016020900481019282620001ae5760008555620001fa565b82601f10620001c957805160ff1916838001178555620001fa565b82800160010185558215620001fa579182015b82811115620001f9578251825591602001919060010190620001dc565b5b5090506200020991906200020d565b5090565b5b80821115620002285760008160009055506001016200020e565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200025e8262000231565b9050919050565b620002708162000251565b81146200027c57600080fd5b50565b600081519050620002908162000265565b92915050565b600060208284031215620002af57620002ae6200022c565b5b6000620002bf848285016200027f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200031057607f821691505b60208210811415620003275762000326620002c8565b5b50919050565b612c1b806200033d6000396000f3fe6080604052600436106101145760003560e01c806342842e0e116100a0578063a0712d6811610064578063a0712d6814610392578063a22cb465146103c2578063b88d4fde146103eb578063c87b56dd14610414578063e985e9c51461045157610114565b806342842e0e146102995780636352211e146102c257806370a08231146102ff5780638da5cb5b1461033c57806395d89b411461036757610114565b80631249c58b116100e75780631249c58b146101e757806313af40351461020557806318160ddd1461022e57806323b872dd146102595780633ccfd60b1461028257610114565b806301ffc9a71461011957806306fdde0314610156578063081812fc14610181578063095ea7b3146101be575b600080fd5b34801561012557600080fd5b50610140600480360381019061013b9190611ba4565b61048e565b60405161014d9190611bec565b60405180910390f35b34801561016257600080fd5b5061016b610520565b6040516101789190611ca0565b60405180910390f35b34801561018d57600080fd5b506101a860048036038101906101a39190611cf8565b6105ae565b6040516101b59190611d66565b60405180910390f35b3480156101ca57600080fd5b506101e560048036038101906101e09190611dad565b6105e1565b005b6101ef6107ca565b6040516101fc9190611e09565b60405180910390f35b34801561021157600080fd5b5061022c60048036038101906102279190611e24565b6108ca565b005b34801561023a57600080fd5b506102436109f8565b6040516102509190611e09565b60405180910390f35b34801561026557600080fd5b50610280600480360381019061027b9190611e51565b610a0f565b005b34801561028e57600080fd5b50610297610e0f565b005b3480156102a557600080fd5b506102c060048036038101906102bb9190611e51565b610f70565b005b3480156102ce57600080fd5b506102e960048036038101906102e49190611cf8565b6110a8565b6040516102f69190611d66565b60405180910390f35b34801561030b57600080fd5b5061032660048036038101906103219190611e24565b611154565b6040516103339190611eb3565b60405180910390f35b34801561034857600080fd5b5061035161120c565b60405161035e9190611d66565b60405180910390f35b34801561037357600080fd5b5061037c611232565b6040516103899190611ca0565b60405180910390f35b6103ac60048036038101906103a79190611cf8565b6112c0565b6040516103b99190611f8c565b60405180910390f35b3480156103ce57600080fd5b506103e960048036038101906103e49190611fda565b611492565b005b3480156103f757600080fd5b50610412600480360381019061040d919061207f565b61158f565b005b34801561042057600080fd5b5061043b60048036038101906104369190611cf8565b6116cd565b6040516104489190611ca0565b60405180910390f35b34801561045d57600080fd5b5061047860048036038101906104739190612107565b61177f565b6040516104859190611bec565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104e957506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806105195750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6000805461052d90612176565b80601f016020809104026020016040519081016040528092919081815260200182805461055990612176565b80156105a65780601f1061057b576101008083540402835291602001916105a6565b820191906000526020600020905b81548152906001019060200180831161058957829003601f168201915b505050505081565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106d95750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070f906121f4565b60405180910390fd5b826004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000606460ff16600660149054906101000a900460ff1660ff1610610824576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081b90612260565b60405180910390fd5b600134662386f26fc100008261083a91906122af565b1461087a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087190612355565b60405180910390fd5b60006006601481819054906101000a900460ff168092919061089b90612375565b91906101000a81548160ff021916908360ff16021790555090506108c2338260ff166117ae565b809250505090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461095a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610951906123eb565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7660405160405180910390a350565b6000600660149054906101000a900460ff16905090565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa790612457565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b17906124c3565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610be05750600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b80610c4957506004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610c88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7f906121f4565b60405180910390fd5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e96906123eb565b60405180910390fd5b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1647604051610ee790612514565b60006040518083038185875af1925050503d8060008114610f24576040519150601f19603f3d011682016040523d82523d6000602084013e610f29565b606091505b5050905080610f6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6490612575565b60405180910390fd5b50565b610f7b838383610a0f565b60008273ffffffffffffffffffffffffffffffffffffffff163b1480611064575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a023386856040518463ffffffff1660e01b8152600401611000939291906125c9565b6020604051808303816000875af115801561101f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110439190612628565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b6110a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109a906126a1565b60405180910390fd5b505050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508173ffffffffffffffffffffffffffffffffffffffff16141561114f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111469061270d565b60405180910390fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111bc90612779565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001805461123f90612176565b80601f016020809104026020016040519081016040528092919081815260200182805461126b90612176565b80156112b85780601f1061128d576101008083540402835291602001916112b8565b820191906000526020600020905b81548152906001019060200180831161129b57829003601f168201915b505050505081565b6060606460ff16600660149054906101000a900460ff1660ff161061131a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131190612260565b60405180910390fd5b8134662386f26fc100008261132f91906122af565b1461136f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136690612355565b60405180910390fd5b60058311156113b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113aa906127e5565b60405180910390fd5b60008367ffffffffffffffff8111156113cf576113ce612805565b5b6040519080825280602002602001820160405280156113fd5781602001602082028036833780820191505090505b50905060005b848110156114875760006006601481819054906101000a900460ff168092919061142c90612375565b91906101000a81548160ff021916908360ff16021790555060ff16905061145333826117ae565b8083838151811061146757611466612834565b5b60200260200101818152505050808061147f90612863565b915050611403565b508092505050919050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516115839190611bec565b60405180910390a35050565b61159a858585610a0f565b60008473ffffffffffffffffffffffffffffffffffffffff163b1480611687575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663150b7a0233888787876040518663ffffffff1660e01b81526004016116239594939291906128e8565b6020604051808303816000875af1158015611642573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116669190612628565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b6116c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116bd906126a1565b60405180910390fd5b5050505050565b6060600073ffffffffffffffffffffffffffffffffffffffff166116f0836110a8565b73ffffffffffffffffffffffffffffffffffffffff161415611747576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173e90612982565b60405180910390fd5b61174f6119c1565b611758836119e1565b6040516020016117699291906129de565b6040516020818303038152906040529050919050565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561181e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611815906124c3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146118c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118b790612a4e565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60606040518060800160405280605c8152602001612b8a605c9139905090565b60606000821415611a29576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611b3d565b600082905060005b60008214611a5b578080611a4490612863565b915050600a82611a549190612a9d565b9150611a31565b60008167ffffffffffffffff811115611a7757611a76612805565b5b6040519080825280601f01601f191660200182016040528015611aa95781602001600182028036833780820191505090505b5090505b60008514611b3657600182611ac29190612ace565b9150600a85611ad19190612b02565b6030611add9190612b33565b60f81b818381518110611af357611af2612834565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611b2f9190612a9d565b9450611aad565b8093505050505b919050565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b8181611b4c565b8114611b8c57600080fd5b50565b600081359050611b9e81611b78565b92915050565b600060208284031215611bba57611bb9611b42565b5b6000611bc884828501611b8f565b91505092915050565b60008115159050919050565b611be681611bd1565b82525050565b6000602082019050611c016000830184611bdd565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c41578082015181840152602081019050611c26565b83811115611c50576000848401525b50505050565b6000601f19601f8301169050919050565b6000611c7282611c07565b611c7c8185611c12565b9350611c8c818560208601611c23565b611c9581611c56565b840191505092915050565b60006020820190508181036000830152611cba8184611c67565b905092915050565b6000819050919050565b611cd581611cc2565b8114611ce057600080fd5b50565b600081359050611cf281611ccc565b92915050565b600060208284031215611d0e57611d0d611b42565b5b6000611d1c84828501611ce3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d5082611d25565b9050919050565b611d6081611d45565b82525050565b6000602082019050611d7b6000830184611d57565b92915050565b611d8a81611d45565b8114611d9557600080fd5b50565b600081359050611da781611d81565b92915050565b60008060408385031215611dc457611dc3611b42565b5b6000611dd285828601611d98565b9250506020611de385828601611ce3565b9150509250929050565b600060ff82169050919050565b611e0381611ded565b82525050565b6000602082019050611e1e6000830184611dfa565b92915050565b600060208284031215611e3a57611e39611b42565b5b6000611e4884828501611d98565b91505092915050565b600080600060608486031215611e6a57611e69611b42565b5b6000611e7886828701611d98565b9350506020611e8986828701611d98565b9250506040611e9a86828701611ce3565b9150509250925092565b611ead81611cc2565b82525050565b6000602082019050611ec86000830184611ea4565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611f0381611cc2565b82525050565b6000611f158383611efa565b60208301905092915050565b6000602082019050919050565b6000611f3982611ece565b611f438185611ed9565b9350611f4e83611eea565b8060005b83811015611f7f578151611f668882611f09565b9750611f7183611f21565b925050600181019050611f52565b5085935050505092915050565b60006020820190508181036000830152611fa68184611f2e565b905092915050565b611fb781611bd1565b8114611fc257600080fd5b50565b600081359050611fd481611fae565b92915050565b60008060408385031215611ff157611ff0611b42565b5b6000611fff85828601611d98565b925050602061201085828601611fc5565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f84011261203f5761203e61201a565b5b8235905067ffffffffffffffff81111561205c5761205b61201f565b5b60208301915083600182028301111561207857612077612024565b5b9250929050565b60008060008060006080868803121561209b5761209a611b42565b5b60006120a988828901611d98565b95505060206120ba88828901611d98565b94505060406120cb88828901611ce3565b935050606086013567ffffffffffffffff8111156120ec576120eb611b47565b5b6120f888828901612029565b92509250509295509295909350565b6000806040838503121561211e5761211d611b42565b5b600061212c85828601611d98565b925050602061213d85828601611d98565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061218e57607f821691505b602082108114156121a2576121a1612147565b5b50919050565b7f4e4f545f415554484f52495a4544000000000000000000000000000000000000600082015250565b60006121de600e83611c12565b91506121e9826121a8565b602082019050919050565b6000602082019050818103600083015261220d816121d1565b9050919050565b7f4e6f206d6f726520746f6b656e7320746f206d696e7400000000000000000000600082015250565b600061224a601683611c12565b915061225582612214565b602082019050919050565b600060208201905081810360008301526122798161223d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006122ba82611cc2565b91506122c583611cc2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156122fe576122fd612280565b5b828202905092915050565b7f46656520697320696e636f727265637400000000000000000000000000000000600082015250565b600061233f601083611c12565b915061234a82612309565b602082019050919050565b6000602082019050818103600083015261236e81612332565b9050919050565b600061238082611ded565b915060ff82141561239457612393612280565b5b600182019050919050565b7f554e415554484f52495a45440000000000000000000000000000000000000000600082015250565b60006123d5600c83611c12565b91506123e08261239f565b602082019050919050565b60006020820190508181036000830152612404816123c8565b9050919050565b7f57524f4e475f46524f4d00000000000000000000000000000000000000000000600082015250565b6000612441600a83611c12565b915061244c8261240b565b602082019050919050565b6000602082019050818103600083015261247081612434565b9050919050565b7f494e56414c49445f524543495049454e54000000000000000000000000000000600082015250565b60006124ad601183611c12565b91506124b882612477565b602082019050919050565b600060208201905081810360008301526124dc816124a0565b9050919050565b600081905092915050565b50565b60006124fe6000836124e3565b9150612509826124ee565b600082019050919050565b600061251f826124f1565b9150819050919050565b7f7769746864726177616c206661696c6564000000000000000000000000000000600082015250565b600061255f601183611c12565b915061256a82612529565b602082019050919050565b6000602082019050818103600083015261258e81612552565b9050919050565b600082825260208201905092915050565b60006125b3600083612595565b91506125be826124ee565b600082019050919050565b60006080820190506125de6000830186611d57565b6125eb6020830185611d57565b6125f86040830184611ea4565b8181036060830152612609816125a6565b9050949350505050565b60008151905061262281611b78565b92915050565b60006020828403121561263e5761263d611b42565b5b600061264c84828501612613565b91505092915050565b7f554e534146455f524543495049454e5400000000000000000000000000000000600082015250565b600061268b601083611c12565b915061269682612655565b602082019050919050565b600060208201905081810360008301526126ba8161267e565b9050919050565b7f4e4f545f4d494e54454400000000000000000000000000000000000000000000600082015250565b60006126f7600a83611c12565b9150612702826126c1565b602082019050919050565b60006020820190508181036000830152612726816126ea565b9050919050565b7f5a45524f5f414444524553530000000000000000000000000000000000000000600082015250565b6000612763600c83611c12565b915061276e8261272d565b602082019050919050565b6000602082019050818103600083015261279281612756565b9050919050565b7f43616e2774206d696e74206d6f7265207468616e203500000000000000000000600082015250565b60006127cf601683611c12565b91506127da82612799565b602082019050919050565b600060208201905081810360008301526127fe816127c2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061286e82611cc2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156128a1576128a0612280565b5b600182019050919050565b82818337600083830152505050565b60006128c78385612595565b93506128d48385846128ac565b6128dd83611c56565b840190509392505050565b60006080820190506128fd6000830188611d57565b61290a6020830187611d57565b6129176040830186611ea4565b818103606083015261292a8184866128bb565b90509695505050505050565b7f546f6b656e20646f6573206e6f74206578697374000000000000000000000000600082015250565b600061296c601483611c12565b915061297782612936565b602082019050919050565b6000602082019050818103600083015261299b8161295f565b9050919050565b600081905092915050565b60006129b882611c07565b6129c281856129a2565b93506129d2818560208601611c23565b80840191505092915050565b60006129ea82856129ad565b91506129f682846129ad565b91508190509392505050565b7f414c52454144595f4d494e544544000000000000000000000000000000000000600082015250565b6000612a38600e83611c12565b9150612a4382612a02565b602082019050919050565b60006020820190508181036000830152612a6781612a2b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612aa882611cc2565b9150612ab383611cc2565b925082612ac357612ac2612a6e565b5b828204905092915050565b6000612ad982611cc2565b9150612ae483611cc2565b925082821015612af757612af6612280565b5b828203905092915050565b6000612b0d82611cc2565b9150612b1883611cc2565b925082612b2857612b27612a6e565b5b828206905092915050565b6000612b3e82611cc2565b9150612b4983611cc2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612b7e57612b7d612280565b5b82820190509291505056fe68747470733a2f2f6261667962656962687169736c696c6f33366b6832626865707a696c7234346867667a706b6e676e66327833746275686f706734716233667568612e697066732e647765622e6c696e6b2f6d657461646174612fa2646970667358221220c9706144d818c16004450d399862ff6d0a356e76afbf0c6d7b6ccc2fc4a0e1ff64736f6c634300080c0033",
  "deployedBytecode": "0x6080604052600436106101145760003560e01c806342842e0e116100a0578063a0712d6811610064578063a0712d6814610392578063a22cb465146103c2578063b88d4fde146103eb578063c87b56dd14610414578063e985e9c51461045157610114565b806342842e0e146102995780636352211e146102c257806370a08231146102ff5780638da5cb5b1461033c57806395d89b411461036757610114565b80631249c58b116100e75780631249c58b146101e757806313af40351461020557806318160ddd1461022e57806323b872dd146102595780633ccfd60b1461028257610114565b806301ffc9a71461011957806306fdde0314610156578063081812fc14610181578063095ea7b3146101be575b600080fd5b34801561012557600080fd5b50610140600480360381019061013b9190611ba4565b61048e565b60405161014d9190611bec565b60405180910390f35b34801561016257600080fd5b5061016b610520565b6040516101789190611ca0565b60405180910390f35b34801561018d57600080fd5b506101a860048036038101906101a39190611cf8565b6105ae565b6040516101b59190611d66565b60405180910390f35b3480156101ca57600080fd5b506101e560048036038101906101e09190611dad565b6105e1565b005b6101ef6107ca565b6040516101fc9190611e09565b60405180910390f35b34801561021157600080fd5b5061022c60048036038101906102279190611e24565b6108ca565b005b34801561023a57600080fd5b506102436109f8565b6040516102509190611e09565b60405180910390f35b34801561026557600080fd5b50610280600480360381019061027b9190611e51565b610a0f565b005b34801561028e57600080fd5b50610297610e0f565b005b3480156102a557600080fd5b506102c060048036038101906102bb9190611e51565b610f70565b005b3480156102ce57600080fd5b506102e960048036038101906102e49190611cf8565b6110a8565b6040516102f69190611d66565b60405180910390f35b34801561030b57600080fd5b5061032660048036038101906103219190611e24565b611154565b6040516103339190611eb3565b60405180910390f35b34801561034857600080fd5b5061035161120c565b60405161035e9190611d66565b60405180910390f35b34801561037357600080fd5b5061037c611232565b6040516103899190611ca0565b60405180910390f35b6103ac60048036038101906103a79190611cf8565b6112c0565b6040516103b99190611f8c565b60405180910390f35b3480156103ce57600080fd5b506103e960048036038101906103e49190611fda565b611492565b005b3480156103f757600080fd5b50610412600480360381019061040d919061207f565b61158f565b005b34801561042057600080fd5b5061043b60048036038101906104369190611cf8565b6116cd565b6040516104489190611ca0565b60405180910390f35b34801561045d57600080fd5b5061047860048036038101906104739190612107565b61177f565b6040516104859190611bec565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104e957506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806105195750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6000805461052d90612176565b80601f016020809104026020016040519081016040528092919081815260200182805461055990612176565b80156105a65780601f1061057b576101008083540402835291602001916105a6565b820191906000526020600020905b81548152906001019060200180831161058957829003601f168201915b505050505081565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106d95750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070f906121f4565b60405180910390fd5b826004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000606460ff16600660149054906101000a900460ff1660ff1610610824576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081b90612260565b60405180910390fd5b600134662386f26fc100008261083a91906122af565b1461087a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087190612355565b60405180910390fd5b60006006601481819054906101000a900460ff168092919061089b90612375565b91906101000a81548160ff021916908360ff16021790555090506108c2338260ff166117ae565b809250505090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461095a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610951906123eb565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7660405160405180910390a350565b6000600660149054906101000a900460ff16905090565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa790612457565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b17906124c3565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610be05750600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b80610c4957506004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610c88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7f906121f4565b60405180910390fd5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e96906123eb565b60405180910390fd5b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1647604051610ee790612514565b60006040518083038185875af1925050503d8060008114610f24576040519150601f19603f3d011682016040523d82523d6000602084013e610f29565b606091505b5050905080610f6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6490612575565b60405180910390fd5b50565b610f7b838383610a0f565b60008273ffffffffffffffffffffffffffffffffffffffff163b1480611064575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a023386856040518463ffffffff1660e01b8152600401611000939291906125c9565b6020604051808303816000875af115801561101f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110439190612628565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b6110a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109a906126a1565b60405180910390fd5b505050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508173ffffffffffffffffffffffffffffffffffffffff16141561114f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111469061270d565b60405180910390fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111bc90612779565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001805461123f90612176565b80601f016020809104026020016040519081016040528092919081815260200182805461126b90612176565b80156112b85780601f1061128d576101008083540402835291602001916112b8565b820191906000526020600020905b81548152906001019060200180831161129b57829003601f168201915b505050505081565b6060606460ff16600660149054906101000a900460ff1660ff161061131a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131190612260565b60405180910390fd5b8134662386f26fc100008261132f91906122af565b1461136f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136690612355565b60405180910390fd5b60058311156113b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113aa906127e5565b60405180910390fd5b60008367ffffffffffffffff8111156113cf576113ce612805565b5b6040519080825280602002602001820160405280156113fd5781602001602082028036833780820191505090505b50905060005b848110156114875760006006601481819054906101000a900460ff168092919061142c90612375565b91906101000a81548160ff021916908360ff16021790555060ff16905061145333826117ae565b8083838151811061146757611466612834565b5b60200260200101818152505050808061147f90612863565b915050611403565b508092505050919050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516115839190611bec565b60405180910390a35050565b61159a858585610a0f565b60008473ffffffffffffffffffffffffffffffffffffffff163b1480611687575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663150b7a0233888787876040518663ffffffff1660e01b81526004016116239594939291906128e8565b6020604051808303816000875af1158015611642573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116669190612628565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b6116c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116bd906126a1565b60405180910390fd5b5050505050565b6060600073ffffffffffffffffffffffffffffffffffffffff166116f0836110a8565b73ffffffffffffffffffffffffffffffffffffffff161415611747576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173e90612982565b60405180910390fd5b61174f6119c1565b611758836119e1565b6040516020016117699291906129de565b6040516020818303038152906040529050919050565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561181e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611815906124c3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146118c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118b790612a4e565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60606040518060800160405280605c8152602001612b8a605c9139905090565b60606000821415611a29576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611b3d565b600082905060005b60008214611a5b578080611a4490612863565b915050600a82611a549190612a9d565b9150611a31565b60008167ffffffffffffffff811115611a7757611a76612805565b5b6040519080825280601f01601f191660200182016040528015611aa95781602001600182028036833780820191505090505b5090505b60008514611b3657600182611ac29190612ace565b9150600a85611ad19190612b02565b6030611add9190612b33565b60f81b818381518110611af357611af2612834565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611b2f9190612a9d565b9450611aad565b8093505050505b919050565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b8181611b4c565b8114611b8c57600080fd5b50565b600081359050611b9e81611b78565b92915050565b600060208284031215611bba57611bb9611b42565b5b6000611bc884828501611b8f565b91505092915050565b60008115159050919050565b611be681611bd1565b82525050565b6000602082019050611c016000830184611bdd565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c41578082015181840152602081019050611c26565b83811115611c50576000848401525b50505050565b6000601f19601f8301169050919050565b6000611c7282611c07565b611c7c8185611c12565b9350611c8c818560208601611c23565b611c9581611c56565b840191505092915050565b60006020820190508181036000830152611cba8184611c67565b905092915050565b6000819050919050565b611cd581611cc2565b8114611ce057600080fd5b50565b600081359050611cf281611ccc565b92915050565b600060208284031215611d0e57611d0d611b42565b5b6000611d1c84828501611ce3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d5082611d25565b9050919050565b611d6081611d45565b82525050565b6000602082019050611d7b6000830184611d57565b92915050565b611d8a81611d45565b8114611d9557600080fd5b50565b600081359050611da781611d81565b92915050565b60008060408385031215611dc457611dc3611b42565b5b6000611dd285828601611d98565b9250506020611de385828601611ce3565b9150509250929050565b600060ff82169050919050565b611e0381611ded565b82525050565b6000602082019050611e1e6000830184611dfa565b92915050565b600060208284031215611e3a57611e39611b42565b5b6000611e4884828501611d98565b91505092915050565b600080600060608486031215611e6a57611e69611b42565b5b6000611e7886828701611d98565b9350506020611e8986828701611d98565b9250506040611e9a86828701611ce3565b9150509250925092565b611ead81611cc2565b82525050565b6000602082019050611ec86000830184611ea4565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611f0381611cc2565b82525050565b6000611f158383611efa565b60208301905092915050565b6000602082019050919050565b6000611f3982611ece565b611f438185611ed9565b9350611f4e83611eea565b8060005b83811015611f7f578151611f668882611f09565b9750611f7183611f21565b925050600181019050611f52565b5085935050505092915050565b60006020820190508181036000830152611fa68184611f2e565b905092915050565b611fb781611bd1565b8114611fc257600080fd5b50565b600081359050611fd481611fae565b92915050565b60008060408385031215611ff157611ff0611b42565b5b6000611fff85828601611d98565b925050602061201085828601611fc5565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f84011261203f5761203e61201a565b5b8235905067ffffffffffffffff81111561205c5761205b61201f565b5b60208301915083600182028301111561207857612077612024565b5b9250929050565b60008060008060006080868803121561209b5761209a611b42565b5b60006120a988828901611d98565b95505060206120ba88828901611d98565b94505060406120cb88828901611ce3565b935050606086013567ffffffffffffffff8111156120ec576120eb611b47565b5b6120f888828901612029565b92509250509295509295909350565b6000806040838503121561211e5761211d611b42565b5b600061212c85828601611d98565b925050602061213d85828601611d98565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061218e57607f821691505b602082108114156121a2576121a1612147565b5b50919050565b7f4e4f545f415554484f52495a4544000000000000000000000000000000000000600082015250565b60006121de600e83611c12565b91506121e9826121a8565b602082019050919050565b6000602082019050818103600083015261220d816121d1565b9050919050565b7f4e6f206d6f726520746f6b656e7320746f206d696e7400000000000000000000600082015250565b600061224a601683611c12565b915061225582612214565b602082019050919050565b600060208201905081810360008301526122798161223d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006122ba82611cc2565b91506122c583611cc2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156122fe576122fd612280565b5b828202905092915050565b7f46656520697320696e636f727265637400000000000000000000000000000000600082015250565b600061233f601083611c12565b915061234a82612309565b602082019050919050565b6000602082019050818103600083015261236e81612332565b9050919050565b600061238082611ded565b915060ff82141561239457612393612280565b5b600182019050919050565b7f554e415554484f52495a45440000000000000000000000000000000000000000600082015250565b60006123d5600c83611c12565b91506123e08261239f565b602082019050919050565b60006020820190508181036000830152612404816123c8565b9050919050565b7f57524f4e475f46524f4d00000000000000000000000000000000000000000000600082015250565b6000612441600a83611c12565b915061244c8261240b565b602082019050919050565b6000602082019050818103600083015261247081612434565b9050919050565b7f494e56414c49445f524543495049454e54000000000000000000000000000000600082015250565b60006124ad601183611c12565b91506124b882612477565b602082019050919050565b600060208201905081810360008301526124dc816124a0565b9050919050565b600081905092915050565b50565b60006124fe6000836124e3565b9150612509826124ee565b600082019050919050565b600061251f826124f1565b9150819050919050565b7f7769746864726177616c206661696c6564000000000000000000000000000000600082015250565b600061255f601183611c12565b915061256a82612529565b602082019050919050565b6000602082019050818103600083015261258e81612552565b9050919050565b600082825260208201905092915050565b60006125b3600083612595565b91506125be826124ee565b600082019050919050565b60006080820190506125de6000830186611d57565b6125eb6020830185611d57565b6125f86040830184611ea4565b8181036060830152612609816125a6565b9050949350505050565b60008151905061262281611b78565b92915050565b60006020828403121561263e5761263d611b42565b5b600061264c84828501612613565b91505092915050565b7f554e534146455f524543495049454e5400000000000000000000000000000000600082015250565b600061268b601083611c12565b915061269682612655565b602082019050919050565b600060208201905081810360008301526126ba8161267e565b9050919050565b7f4e4f545f4d494e54454400000000000000000000000000000000000000000000600082015250565b60006126f7600a83611c12565b9150612702826126c1565b602082019050919050565b60006020820190508181036000830152612726816126ea565b9050919050565b7f5a45524f5f414444524553530000000000000000000000000000000000000000600082015250565b6000612763600c83611c12565b915061276e8261272d565b602082019050919050565b6000602082019050818103600083015261279281612756565b9050919050565b7f43616e2774206d696e74206d6f7265207468616e203500000000000000000000600082015250565b60006127cf601683611c12565b91506127da82612799565b602082019050919050565b600060208201905081810360008301526127fe816127c2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061286e82611cc2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156128a1576128a0612280565b5b600182019050919050565b82818337600083830152505050565b60006128c78385612595565b93506128d48385846128ac565b6128dd83611c56565b840190509392505050565b60006080820190506128fd6000830188611d57565b61290a6020830187611d57565b6129176040830186611ea4565b818103606083015261292a8184866128bb565b90509695505050505050565b7f546f6b656e20646f6573206e6f74206578697374000000000000000000000000600082015250565b600061296c601483611c12565b915061297782612936565b602082019050919050565b6000602082019050818103600083015261299b8161295f565b9050919050565b600081905092915050565b60006129b882611c07565b6129c281856129a2565b93506129d2818560208601611c23565b80840191505092915050565b60006129ea82856129ad565b91506129f682846129ad565b91508190509392505050565b7f414c52454144595f4d494e544544000000000000000000000000000000000000600082015250565b6000612a38600e83611c12565b9150612a4382612a02565b602082019050919050565b60006020820190508181036000830152612a6781612a2b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612aa882611cc2565b9150612ab383611cc2565b925082612ac357612ac2612a6e565b5b828204905092915050565b6000612ad982611cc2565b9150612ae483611cc2565b925082821015612af757612af6612280565b5b828203905092915050565b6000612b0d82611cc2565b9150612b1883611cc2565b925082612b2857612b27612a6e565b5b828206905092915050565b6000612b3e82611cc2565b9150612b4983611cc2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612b7e57612b7d612280565b5b82820190509291505056fe68747470733a2f2f6261667962656962687169736c696c6f33366b6832626865707a696c7234346867667a706b6e676e66327833746275686f706734716233667568612e697066732e647765622e6c696e6b2f6d657461646174612fa2646970667358221220c9706144d818c16004450d399862ff6d0a356e76afbf0c6d7b6ccc2fc4a0e1ff64736f6c634300080c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 536,
        "contract": "contracts/Collectible.sol:Collectible",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 538,
        "contract": "contracts/Collectible.sol:Collectible",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 549,
        "contract": "contracts/Collectible.sol:Collectible",
        "label": "_ownerOf",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 553,
        "contract": "contracts/Collectible.sol:Collectible",
        "label": "_balanceOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 602,
        "contract": "contracts/Collectible.sol:Collectible",
        "label": "getApproved",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 608,
        "contract": "contracts/Collectible.sol:Collectible",
        "label": "isApprovedForAll",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 458,
        "contract": "contracts/Collectible.sol:Collectible",
        "label": "owner",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 245,
        "contract": "contracts/Collectible.sol:Collectible",
        "label": "_counter",
        "offset": 20,
        "slot": "6",
        "type": "t_uint8"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}